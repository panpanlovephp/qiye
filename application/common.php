<?phpfunction getTime($date){    return  date('Y-m-d',$date);}function getTime2($date){    return date('Y-m-d H:i:s',$date);}function getTime3($date){    return date('Y-m-d H:i',$date);}function getXmZt($status){    if($status == 0){        return '未审核';    }else if($status == 1){        return '<span style="color: green;">已审核</span>';    }}/** * 把小时转成时间戳 */function sjc($time){    return  strtotime(date('Y-m-d').' '.$time);}function tq_wz($content){    $preg = '/[\x{4e00}-\x{9fa5}]+/u';    if(preg_match_all($preg,$content,$matches)){        return $matches;    }}function getShi($id){    return db('area')->where('id',$id)->value('title');}function getQuname($id){    return db('area')->where('id',$id)->value('title');}function getQname($id){    return db('category')->where('id',$id)->value('cat_name');}function getImg($img){    $pt = json_decode($img);    $ct =$pt[0] ;    return $ct;}function getPic($id){    $gt = db('product')->where('id',$id)->value('img');    $pt = json_decode($gt);    $ct =$pt[0] ;    return $ct;}function getlp($id){    return db('product')->where('id',$id)->value('title');}function getFwsqStatus($status){    if($status == 0){        return '未查看';    }else if($status == 1){        return '<span style="color: green;">已查看</span>';    }}function tel($tel){    return substr($tel,0,3)."*****".substr($tel,8,11);}function getLxStatus($id){    return \think\Db::name('area')->where('id',$id)->value('title');}function getCate($id){    return \think\Db::name('category')->where('catid',$id)->value('catname');}function getnid($nid){    return \think\Db::name('area')->where('id',$nid)->value('title');}//多选function is_true($idd,$arr){    if(is_array($arr)){        if(in_array($idd,$arr)){            $is_true = 'checked';        }    }    return $is_true;}//系统消息function sendMessage($uid,$title,$conent){   db('message')->insert(array('uid'=>$uid,'title'=>$title,'content'=>$conent,'status'=>0,'addtime'=>time() ));}function pathConvert($path){    $path = str_replace('./', '/', $path);    $path = str_replace('\\', '/', $path);    return str_replace('//', '/', $path);}function safe_replace($string){    $string = str_replace('%20', '', $string);    $string = str_replace('%27', '', $string);    $string = str_replace('%2527', '', $string);    $string = str_replace('*', '', $string);    $string = str_replace('"', '&quot;', $string);    $string = str_replace("'", '', $string);    $string = str_replace('"', '', $string);    $string = str_replace(';', '', $string);    $string = str_replace('<', '&lt;', $string);    $string = str_replace('>', '&gt;', $string);    $string = str_replace("{", '', $string);    $string = str_replace('}', '', $string);    $string = str_replace('\\', '', $string);    return $string;}function delDirAndFile($path, $delDir = FALSE){    $message = "";    $handle = opendir($path);    if ($handle) {        while (false !== ($item = readdir($handle))) {            if ($item != "." && $item != "..") {                if (is_dir("{$path}/{$item}")) {                    $msg = delDirAndFile("{$path}/{$item}", $delDir);                    if ($msg) {                        $message .= $msg;                    }                } else {                    $message .= "删除文件" . $item;                    if (unlink("{$path}/{$item}")) {                        $message .= "成功<br />";                    } else {                        $message .= "失败<br />";                    }                }            }        }        closedir($handle);        if ($delDir) {            if (rmdir($path)) {                $message .= "删除目录" . dirname($path) . "<br />";            } else {                $message .= "删除目录" . dirname($path) . "失败<br />";            }        }    } else {        if (file_exists($path)) {            if (unlink($path)) {                $message .= "删除文件" . basename($path) . "<br />";            } else {                $message .= "删除文件" + basename($path) . "失败<br />";            }        } else {            $message .= "文件" + basename($path) . "不存在<br />";        }    }    return $message;}function str_cut($string, $length, $dot = '...'){    $strlen = strlen($string);    if ($strlen <= $length) {        return $string;    }    $string = str_replace(array(' ', '&nbsp;', '&amp;', '&quot;', '&#039;', '&ldquo;', '&rdquo;', '&mdash;', '&lt;', '&gt;', '&middot;', '&hellip;'), array('∵', ' ', '&', '"', "'", '“', '”', '—', '<', '>', '·', '…'), $string);    $strcut = '';    $length = intval($length - strlen($dot) - $length / 3);    $n = $tn = $noc = 0;    while ($n < strlen($string)) {        $t = ord($string[$n]);        if ($t == 9 || $t == 10 || 32 <= $t && $t <= 126) {            $tn = 1;            $n++;            $noc++;        } elseif (194 <= $t && $t <= 223) {            $tn = 2;            $n += 2;            $noc += 2;        } elseif (224 <= $t && $t <= 239) {            $tn = 3;            $n += 3;            $noc += 2;        } elseif (240 <= $t && $t <= 247) {            $tn = 4;            $n += 4;            $noc += 2;        } elseif (248 <= $t && $t <= 251) {            $tn = 5;            $n += 5;            $noc += 2;        } elseif ($t == 252 || $t == 253) {            $tn = 6;            $n += 6;            $noc += 2;        } else {            $n++;        }        if ($noc >= $length) {            break;        }    }    if ($noc > $length) {        $n -= $tn;    }    $strcut = substr($string, 0, $n);    $strcut = str_replace(array('∵', '&', '"', "'", '“', '”', '—', '<', '>', '·', '…'), array(' ', '&amp;', '&quot;', '&#039;', '&ldquo;', '&rdquo;', '&mdash;', '&lt;', '&gt;', '&middot;', '&hellip;'), $strcut);    return $strcut . $dot;}function dir_path($path){    $path = str_replace('\\', '/', $path);    if (substr($path, -1) != '/') {        $path = $path . '/';    }    return $path;}function dir_create($path, $mode = 0777){    if (is_dir($path)) {        return TRUE;    }    $ftp_enable = 0;    $path = dir_path($path);    $temp = explode('/', $path);    $cur_dir = '';    $max = count($temp) - 1;    for ($i = 0; $i < $max; $i++) {        $cur_dir .= $temp[$i] . '/';        if (@is_dir($cur_dir)) {            continue;        }        @mkdir($cur_dir, 0777, true);        @chmod($cur_dir, 0777);    }    return is_dir($path);}function auto_save_image($body){    $body = new_stripslashes($body);    if (!preg_match_all('/<img.*?src="(.*?)".*?>/is', $body, $img_array)) {        return $body;    }    $img_array = array_unique($img_array[1]);    set_time_limit(0);    $imgPath = 'uploads/' . date("Ymd");    $milliSecond = date("YmdHis");    dir_create($imgPath);    foreach ($img_array as $key => $value) {        if (preg_match("#" . "http://" . $_SERVER["HTTP_HOST"] . "#i", $value)) {            continue;        }        if (!preg_match("#^http:\\/\\/#i", $value)) {            continue;        }        $value = trim($value);        $imgAttr = get_headers($value, true);        switch ($imgAttr['Content-Type']) {            case 'image/png':                $ext = 'png';                break;            case 'image/jpeg':                $ext = 'jpg';                break;            case 'image/gif':                $ext = 'gif';                break;            default:                $ext = 'jpg';        }        $get_file = @file_get_contents($value);        $filename = mt_rand(100000, 999999) . $milliSecond . $key . '.' . $ext;        $rndFileName = $imgPath . '/' . $filename;        if ($get_file) {            $fp = @fopen($rndFileName, "w");            @fwrite($fp, $get_file);            @fclose($fp);            $webconfig = db('system')->where('id', 1)->find();            if ($webconfig['isthumb']) {                $image = \org\Image::open('./' . $rndFileName);                $image->thumb($webconfig['width'], $webconfig['height'])->save('./' . $rndFileName);            }            if ($webconfig['iswater']) {                $image = \org\Image::open('./' . $rndFileName);                if ($webconfig['pwater'] == 0) {                    $webconfig['pwater'] = rand(1, 9);                }                $image->water('./public/admin/water/water.png', $webconfig['pwater'])->save('./' . $rndFileName);            }        }        db('attachment')->insert(array('filename' => $filename, 'filepath' => $rndFileName, 'fileext' => $ext, 'filesize' => @filesize(pathConvert(ROOT_PATH . $rndFileName)), 'inputtime' => request()->time()));        $body = @ereg_replace($value, __ROOT__ . '/' . $rndFileName, $body);    }    return $body;}/*** 转换字节数为其他单位*** @param	string	$filesize	字节大小* @return	string	返回大小*/function sizecount($filesize){    if ($filesize >= 1073741824) {        $filesize = round($filesize / 1073741824 * 100) / 100 . ' GB';    } elseif ($filesize >= 1048576) {        $filesize = round($filesize / 1048576 * 100) / 100 . ' MB';    } elseif ($filesize >= 1024) {        $filesize = round($filesize / 1024 * 100) / 100 . ' KB';    } else {        $filesize = $filesize . ' Bytes';    }    return $filesize;}/** * 格式化字节大小 * @param  number $size      字节数 * @param  string $delimiter 数字和单位分隔符 * @return string            格式化后的带单位的大小 */function format_bytes($size, $delimiter = ''){    $units = ['B', 'KB', 'MB', 'GB', 'TB', 'PB'];    for ($i = 0; $size >= 1024 && $i < 6; $i++) {        $size /= 1024;    }    return round($size, 2) . $delimiter . $units[$i];}function is_email($email){    $email = strtolower($email);    if (!preg_match('/^([a-z0-9_\\.-]+)@([\\da-z\\.-]+)\\.([a-z\\.]{2,6})$/', $email)) {        die('邮箱格式错误');    }    return $email;}function form_image($field,$value=''){	$str='<input type="file" id="'.$field.'">';	if($value){		$str .='<img src="'.$value.'" style="max-width:300px; max-height:100px" />';		}	$str .="<script type=\"text/javascript\">			$(\"#".$field."\").uploadify({				queueSizeLimit : 1,				height          : 30,				swf             : '__PUBLIC__/uploadify/uploadify.swf',				fileObjName     : 'file',				buttonText      : '上传图片',				uploader        : '".__ROOT__."/api.php/upload/upimg.html',				width           : 120,				removeTimeout	  : 1,				fileTypeExts	  : '*.jpg; *.png; *.gif;',				fileSizeLimit   :2048,				onUploadSuccess : uploadPicture,				onFallback : function() {					alert('未检测到兼容版本的Flash.');				}			});			function uploadPicture(file, data){				var data = \$.parseJSON(data);				if(data.status){           								var html = '<span>'+ '<img style=\"max-width:300px; max-height:100px;\" src=\"'+data.url+'\">' ;							html += '<a href=\"javascript:void(0)\" onclick=\"delete_attachment(this);\">&nbsp;&nbsp;删除</a>';							html += '<input type=\"hidden\" name=".$field." value=\"'+data.url+'\" /></span>';							\$('#".$field."').after(html);				} else {					alert('上传出错，请稍后再试');					return false;				}			}			</script>";			return $str;	}function form_images($field,$value=''){		$str='<input type="file" id="'.$field.'">';	if($value){		$value=string2array($value);		foreach($value as $v){		$str .='<span><img style="max-width:300px; max-height:100px;" src='.$v.' />' ;		$str .='<a href="javascript:void(0)" onclick="delete_attachment(this);">&nbsp;删除&nbsp;</a>';		$str .='<input type="hidden" name='.$field.'[] value='.$v.' /></span>';		}		}	$str .="<script type=\"text/javascript\">			$(\"#".$field."\").uploadify({				queueSizeLimit : 20,				height          : 30,				swf             : '__PUBLIC__/uploadify/uploadify.swf',				fileObjName     : 'file',				buttonText      : '上传图片',				uploader        : '".__ROOT__."/api.php/upload/upimg.html',				width           : 120,				removeTimeout	  : 1,				fileTypeExts	  : '*.jpg; *.png; *.gif;',				fileSizeLimit   :2048,				onUploadSuccess : uploadPicture,				onFallback : function() {					alert('未检测到兼容版本的Flash.');				}			});			function uploadPicture(file, data){				var data = \$.parseJSON(data);				if(data.status){           								var html = '<span>'+ '<img style=\"max-width:300px; max-height:100px;\" src=\"'+data.url+'\" />' ;							html += '<a href=\"javascript:void(0)\" onclick=\"delete_attachment(this);\">&nbsp;删除&nbsp;</a>';							html += '<input type=\"hidden\" name=".$field."[] value=\"'+data.url+'\" /></span>';							\$('#".$field."').after(html);				} else {					alert('上传出错，请稍后再试');					return false;				}			}			</script>";			return $str;	}function form_editor($field, $value='')    {               $str = '<script type="text/plain" id="' . $field . '"  style="width:805px;height:200px;">' . new_html_entity_decode($value) .'</script>';        $str .= "<script type=\"text/javascript\">\r\n";        $str .= "var um = UM.getEditor(\"{$field}\",{";        $str .= 'UEDITOR_HOME_URL: "__PUBLIC__/ueditor/",';        $str .= 'imageUrl: "__ROOT__/api.php/upload/ueditor",';        $str .= 'imagePath: "__ROOT__/",';        $str .= "textarea: '{$field}' });";        $str .= '</script>';        return $str;    }function cnWeek($time){    $arr = array('天','一','二','三','四','五','六');    if($time){        return '星期'.$arr[date('w',$time)];    }else{        return '星期'.$arr[date('w')];    }}function cnWeek2($time){    $arr = array('天','一','二','三','四','五','六');    return $arr[date('w',$time)];}function getfalse($ifalse){    if($ifalse == 0){        return '<span style="color: red;">否</span>';    }elseif($ifalse == 1){        return '<span style="color: green;">是</span>';    }}function msubstr($str, $start=0, $length, $charset="utf-8", $suffix=true){    if(function_exists("mb_substr")){        if ($suffix && strlen($str)>$length)            return mb_substr($str, $start, $length, $charset)."...";        else            return mb_substr($str, $start, $length, $charset);    }    elseif(function_exists('iconv_substr')) {        if ($suffix && strlen($str)>$length)            return iconv_substr($str,$start,$length,$charset)."...";        else            return iconv_substr($str,$start,$length,$charset);    }    $re['utf-8']   = "/[x01-x7f]|[xc2-xdf][x80-xbf]|[xe0-xef][x80-xbf]{2}|[xf0-xff][x80-xbf]{3}/";    $re['gb2312'] = "/[x01-x7f]|[xb0-xf7][xa0-xfe]/";    $re['gbk']    = "/[x01-x7f]|[x81-xfe][x40-xfe]/";    $re['big5']   = "/[x01-x7f]|[x81-xfe]([x40-x7e]|xa1-xfe])/";    preg_match_all($re[$charset], $str, $match);    $slice = join("",array_slice($match[0], $start, $length));    if($suffix) return $slice."…";    return $slice;}/** * 到出excel * @title string 标题 * @data array 数据 * @setArr array 标题设置 */function outExcel($title,$expCellName,$expTableData){//    var_dump($expCellName);//    var_dump($expTableData);//    exit;    \think\Loader::import('phpexcel.PHPExcel');    $objPHPExcel = new \PHPExcel();    // 开始操作excel表    $objPHPExcel->setActiveSheetIndex(0);    // 设置工作薄名称    //$objPHPExcel->getActiveSheet()->setTitle(iconv('gbk', 'utf-8', 'Sheet'));    // 设置默认字体和大小    $objPHPExcel->getDefaultStyle()->getFont()->setName(iconv('gbk', 'utf-8', ''));    $objPHPExcel->getDefaultStyle()->getFont()->setSize(12);    $cellNum = count($expCellName);    $dataNum = count($expTableData);    $objPHPExcel = new PHPExcel();    $cellName = array('A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z','AA','AB','AC','AD','AE','AF','AG','AH','AI','AJ','AK','AL','AM','AN','AO','AP','AQ','AR','AS','AT','AU','AV','AW','AX','AY','AZ');    for($i=0;$i<$cellNum;$i++){        $objPHPExcel->setActiveSheetIndex(0)->setCellValue($cellName[$i].'1', $expCellName[$i][1]);    }    // Miscellaneous glyphs, UTF-8    for($i=0;$i<$dataNum;$i++)    {        for($j=0;$j<$cellNum;$j++)        {            $objPHPExcel->getActiveSheet(0)->setCellValue($cellName[$j].($i+2), $expTableData[$i][$expCellName[$j][0]]);        }    }    $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');    $filename  = $title.'--'.date('Y-m-d').'.xls';    header('Content-Disposition: attachment;filename='.$filename);    header('Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');    $objWriter->save("php://output"); //表示在$path路径下面生成demo.xlsx文件}